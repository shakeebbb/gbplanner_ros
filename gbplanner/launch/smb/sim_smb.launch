<launch>
  <!-- All settings -->
  <arg name="robot_name" default="smb"/>
  <arg name="gazebo_gui_en" default="true"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="rviz_en" default="true" />
  <arg name="launch_prefix" default=""/> <!-- gdb -ex run //args -->
  <param name="use_sim_time" value="$(arg use_sim_time)"/>

  <!-- ...................... Config Files .................... -->

  <arg name="gbplanner_config_file" default="$(find gbplanner)/config/$(arg robot_name)/gbplanner_config.yaml"/>
  <arg name="pci_file" default="$(find gbplanner)/config/$(arg robot_name)/planner_control_interface_sim_config.yaml"/>
  <arg name="octomap_config_file" default="$(find gbplanner)/config/$(arg robot_name)/octomap_sim_config.yaml"/>
  <arg name="voxblox_config_file" default="$(find gbplanner)/config/$(arg robot_name)/voxblox_sim_config.yaml"/>
  <arg name="map_config_file" default="$(arg octomap_config_file)"/>
  <arg name="world_file" default="$(find planner_gazebo_sim)/worlds/pittsburgh_mine.world"/>

  <!-- ...................... Static TF .................... -->

  <node pkg="tf" type="static_transform_publisher" name="tf_53" args="0 0 0 0 0 0 world navigation 100" />

  <!-- ...................... Spawn Robot .................... -->

  <env name="GAZEBO_MODEL_PATH" value="${GAZEBO_MODEL_PATH}:$(find planner_gazebo_sim)/models:$(find subt_cave_sim)/models"/>
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
		<arg name="world_name" value="$(arg world_file)"/>
		<arg name="paused" value="false"/>
		<arg name="use_sim_time" value="true"/>
		<arg name="gui" value="$(arg gazebo_gui_en)"/>
		<arg name="headless" value="false"/>
		<arg name="debug" value="false"/>
    <arg name="verbose" value="false"/>
	</include>

  <include file="$(find smb_gazebo)/launch/spawn_smb.launch">
    <arg name="joystick" value="true"/>
    <arg name="x" value="0.0" />
    <arg name="y" value="0.0" />
    <arg name="z" value="0.5" />
  </include>

	<!-- ...................... Path Follower .................... -->

  <node name="path_follower" type= "path_follower_node" pkg="marble_guidance">

    <remap from="path_follower/odometry"        to="/ground_truth/state"/>
    <remap from="path_follower/path"            to="/gbplanner/path_out"/>
		<remap from="/path_follower/cmd_vel"				to="/smb_velocity_controller/cmd_vel"/>

    <param name="vehicle_name"                    value="$(arg robot_name)"/>
    <param name="loop_rate"                       value="20.0"/>

    <param name="yawrate_k0"                      value="1.5"/>
    <param name="yawrate_kd"                      value="0.5"/>
    <param name="yawrate_max"                     value="1.0"/>
    <param name="max_forward_speed"               value="0.75"/>
    <param name="yaw_error_k"                     value="1.25"/>
    <param name="turn_in_place_thresh"            value="1.5"/>
    <param name="end_turn_in_place_thresh"        value="0.1"/>
    <param name="turn_in_place_yawrate"           value="1.0"/>
    <param name="lookahead_distance_threshold"    value="0.75"/>
    <param name="enable_speed_regulation"         value="true"/>
    <param name="stopping_distance"               value="0.4"/>
    <param name="slow_down_distance"              value="0.65"/>
    <param name="sim_start"                       value="false"/>

  </node>

  <node pkg="topic_tools" type="relay" name="vlp_relay" args="/velodyne_points /input_pointcloud" />
  <node pkg="topic_tools" type="relay" name="front_lidar_relay" args="/lidar_front_points /input_pointcloud" />

	<arg name="odometry_topic" default="/ground_truth/state"/>
  <node name="pose_throttler" type="throttle" pkg="topic_tools" args="messages $(arg robot_name)/ground_truth/pose_with_covariance 10 /msf_core/pose" />

  <!-- ...................... Global Planner .................... -->

  <node pkg="gbplanner" type="gbplanner_node" name="gbplanner_node" output="screen" launch-prefix="$(arg launch_prefix)">
    <remap from="odometry" to="$(arg odometry_topic)" />
    <remap from="/pointcloud" to="/input_pointcloud" />
    <rosparam command="load" file="$(arg gbplanner_config_file)" />
    <rosparam command="load" file="$(arg map_config_file)" />
  </node>

  <!-- ............... Planner and Control Interface ............... -->

  <node pkg="pci_mav" type="pci_mav_ros_node" name="pci_mav_ros_node" output="screen">
    <remap from="command/trajectory" to="$(arg robot_name)/command/trajectory" />
    <remap from="planner_server" to="gbplanner" />
    <remap from="planner_homing_server" to="gbplanner/homing" />
    <remap from="odometry" to="$(arg odometry_topic)"/>
    <rosparam command="load" file="$(arg pci_file)" />
  </node>

  <!-- .................... Trajectory to Path .................... -->
	<node pkg="ros_conversions" type="traj_to_path" name="traj_to_path" output="screen">
    <remap from="~/traj_in" to="$(arg robot_name)/command/trajectory" />
    <remap from="~/path_out" to="/gbplanner/path_out" />
  </node>

	<!-- ...................... Explored Volume .................... -->
  <node pkg="octomap_volume" type="octomap_volume" name="octomap_volume">
		
		<remap from="~/octomap_in" to="/gbplanner_node/octomap_binary" /> 
    <remap from="~/volume_out" to="/explored_volume_out" /> 
	
	</node>

	<!-- ...................... Number of tree nodes .................... -->
	<node name="marker_array_to_length" pkg="ros_conversions" type="marker_array_to_length" output="screen" ns="tree">
		<remap from="~/marker_array_in" to="/vis/planning_graph"/>
    <remap from="~/array_length_out" to="/tree/n_vertices"/>
			
		<param name="namespace" value="vertices"/>

	</node>

	<!-- ...................... Number of graph nodes .................... -->
	<node name="marker_array_to_length" pkg="ros_conversions" type="marker_array_to_length" output="screen" ns="graph">
		<remap from="~/marker_array_in" to="/vis/planning_global_graph"/>
    <remap from="~/array_length_out" to="/graph/n_vertices"/>
			
		<param name="namespace" value="vertices"/>

	</node>

  <!-- .......................... RViz ............................ -->

  <node pkg="rviz" type="rviz" name="gbplanner_ui" output="screen" args="-d $(find gbplanner)/config/rviz/$(arg robot_name)_sim.rviz"/>

</launch>
